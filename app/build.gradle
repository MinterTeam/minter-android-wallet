/*
 * Copyright (C) by MinterTeam. 2021
 * @link <a href="https://github.com/MinterTeam">Org Github</a>
 * @link <a href="https://github.com/edwardstock">Maintainer Github</a>
 *
 * The MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

plugins {
    id 'com.android.application'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.appdistribution'
//    id 'firebase.test.lab'
}

Properties localProps = new Properties()
localProps.load(project.rootProject.file('local.properties').newDataInputStream())

//firebaseTestLab {
//    keyFile = file(getProperty('minter_firebase_keypath'))
//    googleProjectId = "bip-wallet"
//    devices {
//        nexusEmulator {
//            deviceIds = ["hammerhead"]
//            androidApiLevels = [23]
//        }
//    }
//}

android {
    compileSdkVersion minterMaxSdk
    buildToolsVersion minterBuildTools
    defaultConfig {
        applicationId "network.minter.bipwallet"
        minSdkVersion minterMinSdk
        targetSdkVersion minterMaxSdk
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "network.minter.bipwallet.tests.internal.WalletTestRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        // here go the options for Moxy compiler
                        "defaultMoxyStrategy": 'moxy.viewstate.strategy.AddToEndStrategy',
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                ]
            }
        }
    }

    buildFeatures {
        viewBinding = true
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    lintOptions {
        disable 'CheckResult', 'DefaultLocale'
        abortOnError false
        ignoreWarnings true
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    testOptions {
        animationsDisabled true
        unitTests.all {

        }
    }

    signingConfigs {
        config {
            keyAlias localProps['minter_key_alias']
            keyPassword localProps['minter_key_password']
            storeFile file(localProps['minter_key_store_file'])
            storePassword localProps['minter_key_store_password']
        }
    }


    buildTypes {
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-test-rules.pro', 'proguard-release-rules.pro'
        }

        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-test-rules.pro', 'proguard-release-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.buildConfigField "String", "MINTER_BOT_SECRET", '"' + localProps.getProperty("minter_bot_secret") + '"'
        variant.buildConfigField "String", "MINTER_STORAGE_VERS", '"v2_"'
        variant.buildConfigField "String", "MINTER_CACHE_VERS", '"v4_"'
        variant.buildConfigField "Boolean", "ENABLE_LEDGER_UI", 'Boolean.parseBoolean("' + (localProps.getProperty("ledger_ui", "false")) + '")'
        variant.buildConfigField "Boolean", "ENABLE_STORIES", 'Boolean.parseBoolean("' + (localProps.getProperty("enable_stories", "true")) + '")'

    }

    packagingOptions {
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }

    flavorDimensions "env"

    productFlavors {
        netMain {
            dimension "env"
            applicationId = "network.minter.bipwallet.mainnet"
            buildConfigField "String", "LIVE_BALANCE_URL", '"wss://explorer-rtm.apps.minter.network/connection/websocket"'
            buildConfigField "String", "EXPLORER_API_URL", 'null'
            buildConfigField "String", "EXPLORER_FRONT_URL", 'null'
            buildConfigField "String", "EXPLORER_STATIC_URL", '"https://explorer-static.minter.network"'
            buildConfigField "String", "GATE_API_URL", 'null'
            buildConfigField "String", "COIN_AVATAR_BASE_URL", '"https://my.apps.minter.network/api/v1/avatar/by/coin/"'
            buildConfigField "String", "ADDRESS_AVATAR_BASE_URL", '"https://my.apps.minter.network/api/v1/avatar/by/address/"'
            buildConfigField "String", "STORIES_API_URL", '"https://stories-api.bip.to/api/v1/"'
        }

        netMainLocal {
            dimension "env"
            applicationId = "network.minter.bipwallet.mainnet"
            buildConfigField "String", "LIVE_BALANCE_URL", '"wss://explorer-rtm.apps.minter.network/connection/websocket"'
            buildConfigField "String", "EXPLORER_API_URL", 'null'
            buildConfigField "String", "EXPLORER_FRONT_URL", 'null'
            buildConfigField "String", "EXPLORER_STATIC_URL", '"https://explorer-static.minter.network"'
            buildConfigField "String", "GATE_API_URL", 'null'
            buildConfigField "String", "COIN_AVATAR_BASE_URL", '"https://my.apps.minter.network/api/v1/avatar/by/coin/"'
            buildConfigField "String", "ADDRESS_AVATAR_BASE_URL", '"https://my.apps.minter.network/api/v1/avatar/by/address/"'
            buildConfigField "String", "STORIES_API_URL", '"https://stories-api.bip.to/api/v1/"'
        }

        netTest {
            dimension "env"
            applicationId = "network.minter.bipwallet"
            buildConfigField "String", "LIVE_BALANCE_URL", '"wss://explorer-rtm.testnet.minter.network/connection/websocket"'
            buildConfigField "String", "EXPLORER_API_URL", '"https://explorer-api.testnet.minter.network/api/v2/"'
            buildConfigField "String", "EXPLORER_FRONT_URL", '"https://explorer.testnet.minter.network/api/v2"'
            buildConfigField "String", "EXPLORER_STATIC_URL", '"https://explorer-static.testnet.minter.network"'
            buildConfigField "String", "GATE_API_URL", '"https://gate-api.testnet.minter.network/api/v2/"'
            buildConfigField "String", "COIN_AVATAR_BASE_URL", '"https://my.beta.minter.network/api/v1/avatar/by/coin/"'
            buildConfigField "String", "ADDRESS_AVATAR_BASE_URL", '"https://my.beta.minter.network/api/v1/avatar/by/address/"'
            buildConfigField "String", "STORIES_API_URL", '"https://stories-api.bip.to/api/v1/"'
        }

        netTestLocal {
            dimension "env"
            applicationId = "network.minter.bipwallet"
            buildConfigField "String", "LIVE_BALANCE_URL", '"wss://explorer-rtm.testnet.minter.network/connection/websocket"'
            buildConfigField "String", "EXPLORER_API_URL", '"https://explorer-api.testnet.minter.network/api/v2/"'
            buildConfigField "String", "EXPLORER_FRONT_URL", '"https://explorer.testnet.minter.network/api/v2"'
            buildConfigField "String", "EXPLORER_STATIC_URL", '"https://explorer-static.testnet.minter.network"'
            buildConfigField "String", "GATE_API_URL", '"https://gate-api.testnet.minter.network/api/v2/"'
            buildConfigField "String", "COIN_AVATAR_BASE_URL", '"https://my.beta.minter.network/api/v1/avatar/by/coin/"'
            buildConfigField "String", "ADDRESS_AVATAR_BASE_URL", '"https://my.beta.minter.network/api/v1/avatar/by/address/"'
            buildConfigField "String", "STORIES_API_URL", '"https://stories-api.bip.to/api/v1/"'
        }
    }
}

dependencies {

    netTestImplementation([
            "network.minter.android:minter-android-core-testnet:${minterCoreSDK}",
            "network.minter.android:minter-android-explorer-testnet:${minterExplorerSDK}",
            "network.minter.android:minter-android-blockchain-testnet:${minterBlockchainSDK}",
    ])
    netTestLocalImplementation([
            "network.minter.android:minter-android-core-testnet:${minterCoreSDK}",
            "network.minter.android:minter-android-explorer-testnet:${minterExplorerSDK}",
            "network.minter.android:minter-android-blockchain-testnet:${minterBlockchainSDK}",
    ])

    netMainImplementation([
            "network.minter.android:minter-android-core:${minterCoreSDK}",
            "network.minter.android:minter-android-explorer:${minterExplorerSDK}",
            "network.minter.android:minter-android-blockchain:${minterBlockchainSDK}",
    ])

    netMainLocalImplementation([
            "network.minter.android:minter-android-core:${minterCoreSDK}",
            "network.minter.android:minter-android-explorer:${minterExplorerSDK}",
            "network.minter.android:minter-android-blockchain:${minterBlockchainSDK}",
    ])

    // android
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation platform('com.google.firebase:firebase-bom:25.12.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    implementation 'androidx.core:core-ktx:1.3.2'
    // room db
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"

    // android arch
    implementation 'androidx.paging:paging-runtime-ktx:2.1.2'
    implementation 'androidx.paging:paging-rxjava2-ktx:2.1.2'


    // yandex
    implementation 'com.yandex.android:mobmetricalib:3.1.0'
    implementation 'com.android.installreferrer:installreferrer:2.2'

    // common
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.edwardstock.android:code-scanner:2.2.1'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.google.zxing:android-core:3.3.0'
    implementation 'com.google.zxing:android-integration:3.3.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'org.parceler:parceler-api:1.1.13'
    kapt 'org.parceler:parceler:1.1.13'
    implementation 'com.edwardstock.android:hawk:3.0.1'
    implementation 'com.annimon:stream:1.2.1'
    implementation 'net.danlew:android.joda:2.9.9.1'
    implementation('com.fatboyindustrial.gson-jodatime-serialisers:gson-jodatime-serialisers:1.6.0') {
        exclude group: 'joda-time'
        exclude group: 'com.google.code.gson'
    }
    implementation 'org.permissionsdispatcher:permissionsdispatcher:4.7.0'
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.7.0"
    implementation 'me.saket:better-link-movement-method:2.2.0'
    implementation 'io.github.centrifugal:centrifuge-java:0.0.5'
    implementation 'com.github.zerobranch:SwipeLayout:1.3.1'
//    implementation 'com.github.shts:StoriesProgressView:3.0.0'

    // Annotations and DI
    kapt 'com.google.dagger:dagger-compiler:2.27'
    kapt 'com.google.dagger:dagger-android-processor:2.27'
    implementation 'com.google.dagger:dagger:2.27'
    implementation 'com.google.dagger:dagger-android-support:2.27'
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // MVP
    implementation 'com.github.moxy-community:moxy:2.2.0'
    implementation 'com.github.moxy-community:moxy-androidx:2.2.0'
    implementation "com.github.moxy-community:moxy-ktx:2.2.0"
    kapt 'com.github.moxy-community:moxy-compiler:2.2.0'

    // Reactive
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // networking
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    //ui
    implementation 'com.jakewharton:butterknife:10.2.1'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'io.coil-kt:coil:1.1.1'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.edwardstock.android:BottomNavigationViewEx:2.1.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.edwardstock.android:input-field:0.0.3'
    implementation 'com.edwardstock.android:autocomplete:1.1.2'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.airbnb.android:paris:1.4.0'
    kapt 'com.airbnb.android:paris-processor:1.4.0'

    implementation 'com.airbnb:deeplinkdispatch:5.2.0'
    kapt 'com.airbnb:deeplinkdispatch-processor:5.2.0'


    //tests
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
//    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.0.0"
//    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.0.0"
    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    androidTestImplementation 'com.squareup.rx.idler:rx2-idler:0.11.0'

    // Core library
    androidTestImplementation 'androidx.test:core:1.3.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:1.0'
    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.3.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.3.0'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.27'
    kaptAndroidTest 'com.google.dagger:dagger-android-processor:2.27'
}

apply plugin: 'com.google.gms.google-services'
